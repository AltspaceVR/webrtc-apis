// Generated by zsLibEventingTool


#ifndef CX_USE_GENERATED_ORG_WEBRTC_AUDIODATA
#include <wrapper/override/cx/Org_WebRtc_AudioData.h>
#else // CX_USE_GENERATED_ORG_WEBRTC_AUDIODATA

#pragma once

#include "types.h"
#include <wrapper/generated/org_webRtc_AudioData.h>

namespace Org {
  namespace WebRtc {



    public ref class AudioData sealed
    {
    internal:
      wrapper::org::webRtc::AudioDataPtr native_;

      struct WrapperCreate {};
      AudioData(const WrapperCreate &) {}

      static AudioData^ ToCx(wrapper::org::webRtc::AudioDataPtr value);
      static wrapper::org::webRtc::AudioDataPtr FromCx(AudioData^ value);



    public:
      // ::org::webRtc::AudioData

      /// <summary>
      /// Constructs a new audio data object. <summary> </summary>
      /// </summary>
      [Windows::Foundation::Metadata::DefaultOverloadAttribute]
      AudioData();

      /// <summary>
      /// Gets if the data is read-only. <summary> </summary>
      /// </summary>
      property Platform::Boolean ReadOnly { Platform::Boolean get(); }
      /// <summary>
      /// Gets or sets the audio samples data. <summary> </summary>
      /// </summary>
      property Windows::Foundation::Collections::IVectorView< int16 >^ Data
      {
        Windows::Foundation::Collections::IVectorView< int16 >^ get();
        void set(Windows::Foundation::Collections::IVectorView< int16 >^ value);
      }

    };

  } // namespace WebRtc
} // namespace Org
#endif //ifndef CX_USE_GENERATED_ORG_WEBRTC_AUDIODATA
