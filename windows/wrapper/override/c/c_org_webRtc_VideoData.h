
#ifndef C_USE_GENERATED_ORG_WEBRTC_VIDEODATA

#pragma once

#include "types.h"


ORG_WEBRTC_WRAPPER_C_PLUS_PLUS_BEGIN_GUARD


/* org_webRtc_VideoData*/

ORG_WEBRTC_WRAPPER_C_EXPORT_API org_webRtc_VideoData_t ORG_WEBRTC_WRAPPER_C_CALLING_CONVENTION org_webRtc_VideoData_wrapperClone(org_webRtc_VideoData_t handle);
ORG_WEBRTC_WRAPPER_C_EXPORT_API void ORG_WEBRTC_WRAPPER_C_CALLING_CONVENTION org_webRtc_VideoData_wrapperDestroy(org_webRtc_VideoData_t handle);
ORG_WEBRTC_WRAPPER_C_EXPORT_API instance_id_t ORG_WEBRTC_WRAPPER_C_CALLING_CONVENTION org_webRtc_VideoData_wrapperInstanceId(org_webRtc_VideoData_t handle);
ORG_WEBRTC_WRAPPER_C_EXPORT_API void ORG_WEBRTC_WRAPPER_C_CALLING_CONVENTION org_webRtc_VideoData_wrapperDispose(org_webRtc_VideoData_t handle);
ORG_WEBRTC_WRAPPER_C_EXPORT_API bool_t ORG_WEBRTC_WRAPPER_C_CALLING_CONVENTION org_webRtc_VideoData_get_is8BitColorSpace(org_webRtc_VideoData_t wrapperThisHandle);
ORG_WEBRTC_WRAPPER_C_EXPORT_API bool_t ORG_WEBRTC_WRAPPER_C_CALLING_CONVENTION org_webRtc_VideoData_get_is16BitColorSpace(org_webRtc_VideoData_t wrapperThisHandle);

ORG_WEBRTC_WRAPPER_C_EXPORT_API binary_size_t ORG_WEBRTC_WRAPPER_C_CALLING_CONVENTION org_webRtc_VideoData_get_size(org_webRtc_VideoData_t wrapperThisHandle);

ORG_WEBRTC_WRAPPER_C_EXPORT_API void ORG_WEBRTC_WRAPPER_C_CALLING_CONVENTION org_webRtc_VideoData_get_data8bit(
  org_webRtc_VideoData_t wrapperThisHandle,
  uintptr_t buffer,
  binary_size_t size);

ORG_WEBRTC_WRAPPER_C_EXPORT_API void ORG_WEBRTC_WRAPPER_C_CALLING_CONVENTION org_webRtc_VideoData_get_data16bit(
  org_webRtc_VideoData_t wrapperThisHandle,
  uintptr_t buffer,
  binary_size_t size);


ORG_WEBRTC_WRAPPER_C_PLUS_PLUS_END_GUARD

#ifdef __cplusplus


namespace wrapper
{
  org_webRtc_VideoData_t org_webRtc_VideoData_wrapperToHandle(wrapper::org::webRtc::VideoDataPtr value);
  wrapper::org::webRtc::VideoDataPtr org_webRtc_VideoData_wrapperFromHandle(org_webRtc_VideoData_t handle);

} /* namespace wrapper */
#endif /* __cplusplus */

#endif /* ifndef C_USE_GENERATED_ORG_WEBRTC_VIDEODATA */
