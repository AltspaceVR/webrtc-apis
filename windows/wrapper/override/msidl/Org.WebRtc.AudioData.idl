//import "windows.foundation.idl";
import "forwards.idl";
import "output.idl";

namespace Org
{
    namespace WebRtc
    {


        [version(1.0)]
        [uuid(5383522e-090b-ef6c-b517-30a29261535f)]
        interface IAudioData : IInspectable
        {

            /// <summary>
            /// Gets if the data is read-only.
            /// </summary>
            Boolean ReadOnly { get; };

            /// <summary>
            /// Gets or sets the audio samples data (int16s encoded in little endian 2 byte pairs).
            /// </summary>
            Windows.Foundation.IMemoryBuffer Data{ get; set; };

            UInt64 Length{ get; };

            UInt64 GetData(ref Int16[] values);
            UInt64 SetData(Int16[] values);

            UInt64 GetDataWithPtr(UInt64 bufferPtr, UInt64 BufferLengthInSamples);
            UInt64 SetDataWithPtr(UInt64 bufferPtr, UInt64 BufferLengthInSamples);
        };

        runtimeclass AudioData : [default] IAudioData, Windows.Foundation.IClosable
        {

            /// <summary>
            /// Constructs a new audio data object.
            /// </summary>
            [default_overload]
            AudioData();

            /// <summary>
            /// Contructs an audio frame. <summary> </summary>
            /// </summary>
            [method_name("AudioDataWithSize")]
            [default_overload]
            AudioData(UInt64 Size);

            /// <summary>
            /// Cast from Org.WebRtc.IAudioData to Org.WebRtc.AudioData
            /// </summary>
            [default_overload]
            [method_name("CastFromIAudioData")]
            static Org.WebRtc.AudioData Cast(Org.WebRtc.IAudioData source);
        };

    } // namespace WebRtc
} // namespace Org

