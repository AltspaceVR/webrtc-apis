//import "windows.foundation.idl";
import "forwards.idl";
import "output.idl";

namespace Org
{
    namespace WebRtc
    {


        /// <summary>
        /// A message queue for receiving delegate events.
        /// </summary>
        [version(1.0)]
        [uuid(f9ad235b-42b0-0239-d7a3-6617a42ae227)]
        interface IEventQueue : IInspectable
        {
        };

        /// <summary>
        /// A message queue for receiving delegate events.
        /// </summary>
        runtimeclass EventQueue : [default] IEventQueue
        {
            /// <summary>
            /// Cast from Org.WebRtc.IEventQueue to Org.WebRtc.EventQueue
            /// </summary>
            [default_overload]
            [method_name("CastFromIEventQueue")]
            static Org.WebRtc.EventQueue Cast(Org.WebRtc.IEventQueue source);

            /// <summary>
            /// Gets or creates an event queue by queue name. If the queue is
            /// not found then a new thread queue will be created.
            /// </summary>
            static Org.WebRtc.IEventQueue GetOrCreateThreadQueueByName(String QueueName);

            /// <summary>
            /// Creates an event thread pool queue object. If a queue name
            /// already exists an existing queue with that name will be
            /// returned.
            /// </summary>
            static Org.WebRtc.IEventQueue CreateThreadQueuePool(
              String QueueName,
              UInt64 MinimumNumberOfThreads
            );

            /// <summary>
            /// The default windows message queue for the system GUI thread.
            /// </summary>
            static Org.WebRtc.IEventQueue GetDefaultForUi();

        };

    } // namespace WebRtc
} // namespace Org

