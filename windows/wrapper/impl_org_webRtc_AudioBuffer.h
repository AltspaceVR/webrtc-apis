// Generated by zsLibEventingTool

#pragma once

#include "types.h"
#include "generated/org_webRtc_AudioBuffer.h"


namespace wrapper {
  namespace impl {
    namespace org {
      namespace webRtc {

        struct AudioBuffer : public wrapper::org::webRtc::AudioBuffer
        {
          ZS_DECLARE_TYPEDEF_PTR(wrapper::org::webRtc::AudioBuffer, WrapperType);
          ZS_DECLARE_TYPEDEF_PTR(wrapper::impl::org::webRtc::AudioBuffer, WrapperImplType);
          AudioBufferWeakPtr thisWeak_;

          AudioBuffer() noexcept;
          virtual ~AudioBuffer() noexcept;
          void wrapper_dispose() noexcept override;


          // methods AudioBuffer
          void wrapper_init_org_webRtc_AudioBuffer(wrapper::org::webRtc::AudioBufferConfigurationPtr config) noexcept override;
          wrapper::org::webRtc::AudioDataPtr channel(int channelIndex) noexcept override;
          wrapper::org::webRtc::AudioDataPtr splitBand(
            int channel,
            int band
            ) noexcept override;
          wrapper::org::webRtc::AudioDataPtr splitChannel(
            int band,
            int channel
            ) noexcept override;
          void deinterleaveFrom(wrapper::org::webRtc::AudioFramePtr frame) noexcept override;
          void interleaveTo(wrapper::org::webRtc::AudioFramePtr frame) noexcept override;
          void copyLowPassToReference() noexcept override;
          void splitIntoFrequencyBands() noexcept override;
          void mergeFrequencyBands() noexcept override;

          // properties AudioBuffer
          int get_channels() noexcept override;
          int get_samplesPerChannel() noexcept override;
          wrapper::org::webRtc::AudioDataPtr get_mixedLowPassData() noexcept override;
          wrapper::org::webRtc::AudioDataPtr get_lowPassReference() noexcept override;
          wrapper::org::webRtc::VadActivity get_activity() noexcept override;
          void set_activity(wrapper::org::webRtc::VadActivity value) noexcept override;
        };

      } // webRtc
    } // org
  } // namespace impl
} // namespace wrapper

